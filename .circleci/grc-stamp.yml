version: 2.1

# the default pipeline parameters, which will be updated according to
# the results of the path-filtering orb
parameters:
  run-build-grc-stamp:
    type: boolean
    default: false

defaults: &defaults
  working_directory: ~/app
  docker:
    - image: cimg/node:22.16

jobs:
  grc-stamp_build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "packages/grc-stamp/package.json" }} # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: cd ~/app/packages/grc-stamp && npm ci
      - run: cd ~/app/packages/grc-stamp && npm run build
      - save_cache:
          paths:
            - ~/app/packages/grc-stamp/node_modules
          key: v1-dependencies-{{ checksum "packages/grc-stamp/package.json" }}
      - persist_to_workspace:
          root: ~/app
          paths: .

  grc-stamp_run_typecheck:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Run typechecks
          command: cd ~/app/packages/grc-stamp && npm run typecheck

  grc-stamp_test-integration:
    <<: *defaults
    docker:
      - image: cimg/node:22.16
      - image: cimg/mysql:5.7
        environment:
          MYSQL_RANDOM_ROOT_PASSWORD: true
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: test
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Wait for mysql
          command: sleep 7
      - run:
          name: Run integration tests
          command: cd ~/app/packages/grc-stamp && npm run test:integration

  grc-stamp_test-unit:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Run unit tests
          command: cd ~/app/packages/grc-stamp && npm run test:unit

  grc-stamp_test-lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Run lint tests
          command: cd ~/app/packages/grc-stamp && npm run test:lint

  grc-stamp_release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Trust this ssh key
          command: mkdir -p ~/.ssh/ && touch ~/.ssh/known_hosts && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Semantic release
          command: cd ~/app/packages/grc-stamp && npm run semantic-release




workflows:
  grc-stamp_build-and-deploy:
    when: << pipeline.parameters.run-build-grc-stamp >>
    jobs:
      - grc-stamp_build

      - grc-stamp_run_typecheck:
          requires:
            - grc-stamp_build

      - grc-stamp_test-integration:
          requires:
            - grc-stamp_build

      - grc-stamp_test-unit:
          requires:
            - grc-stamp_build

      - grc-stamp_test-lint:
          requires:
            - grc-stamp_build

      - grc-stamp_release:
          filters:
            branches:
              only: master
          requires:
            - grc-stamp_build
            - grc-stamp_run_typecheck
            - grc-stamp_test-integration
            - grc-stamp_test-unit
            - grc-stamp_test-lint
